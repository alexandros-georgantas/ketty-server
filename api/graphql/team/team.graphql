# type KetidaTeamMember {
#   id: ID
#   user: User
# }
# type KetidaTeam {
#   id: ID!
#   type: String!
#   name: String!
#   role: String!
#   objectId: ID
#   objectType: String
#   members: [KetidaTeamMember!]
#   global: Boolean
# }

# extend type Query {
#   getBookTeams(bookId: ID!): [KetidaTeam]!
#   getGlobalTeams: [KetidaTeam]!
# }

type TeamSub {
  #   objectId: ID
  #   id: ID!
  role: String
  #   users: [User]!
  global: Boolean
}

extend type Mutation {
  updateKetidaTeamMembers(teamId: ID!, members: [ID!]!): Team!
}

extend type Subscription {
  teamMembersUpdated: TeamSub!
  productionEditorsUpdated: TeamSub!
}
